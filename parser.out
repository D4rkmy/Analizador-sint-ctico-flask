Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CHAR
    COMILLA_DOBLE
    CORCHETE_DER
    CORCHETE_IZQ
    CORDER
    CORIZQ
    DISTINTO
    DOUBLE
    ENTERO
    FLOAT
    FLOTANTE
    FOR
    IGUAL
    INT
    LLAVE_APERTURA
    LLAVE_CIERRE
    MAIN
    MAYOR_IGUAL
    MAYOR_QUE
    MENOR_IGUAL
    MENOR_QUE
    MODULO
    NOT
    OR
    PAR_DER
    PAR_IZQ
    POTENCIA
    RETURN
    UMINUS
    VOID

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> instrucciones instruccion
Rule 2     instrucciones -> instruccion
Rule 3     instruccion -> asignacion
Rule 4     instruccion -> condicion
Rule 5     instruccion -> ciclo
Rule 6     asignacion -> IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA
Rule 7     condicion -> IF PAR_APERTURA expresion PAR_CIERRE instrucciones
Rule 8     ciclo -> WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones
Rule 9     expresion -> IDENTIFICADOR
Rule 10    expresion -> NUMERO
Rule 11    expresion -> expresion SUMA expresion
Rule 12    expresion -> expresion RESTA expresion
Rule 13    expresion -> expresion MULT expresion
Rule 14    expresion -> expresion DIV expresion

Terminals, with rules where they appear

AND                  : 
ASIGNAR              : 6
CHAR                 : 
COMILLA_DOBLE        : 
CORCHETE_DER         : 
CORCHETE_IZQ         : 
CORDER               : 
CORIZQ               : 
DISTINTO             : 
DIV                  : 14
DOUBLE               : 
ENTERO               : 
FLOAT                : 
FLOTANTE             : 
FOR                  : 
IDENTIFICADOR        : 6 9
IF                   : 7
IGUAL                : 
INT                  : 
LLAVE_APERTURA       : 
LLAVE_CIERRE         : 
MAIN                 : 
MAYOR_IGUAL          : 
MAYOR_QUE            : 
MENOR_IGUAL          : 
MENOR_QUE            : 
MODULO               : 
MULT                 : 13
NOT                  : 
NUMERO               : 10
OR                   : 
PAR_APERTURA         : 7 8
PAR_CIERRE           : 7 8
PAR_DER              : 
PAR_IZQ              : 
POTENCIA             : 
PUNTO_Y_COMA         : 6
RESTA                : 12
RETURN               : 
SUMA                 : 11
UMINUS               : 
VOID                 : 
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

asignacion           : 3
ciclo                : 5
condicion            : 4
expresion            : 6 7 8 11 11 12 12 13 13 14 14
instruccion          : 1 2
instrucciones        : 1 7 8 0

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . condicion
    (5) instruccion -> . ciclo
    (6) asignacion -> . IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA
    (7) condicion -> . IF PAR_APERTURA expresion PAR_CIERRE instrucciones
    (8) ciclo -> . WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones

    IDENTIFICADOR   shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8

    instrucciones                  shift and go to state 1
    instruccion                    shift and go to state 2
    asignacion                     shift and go to state 3
    condicion                      shift and go to state 4
    ciclo                          shift and go to state 5

state 1

    (0) S' -> instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . condicion
    (5) instruccion -> . ciclo
    (6) asignacion -> . IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA
    (7) condicion -> . IF PAR_APERTURA expresion PAR_CIERRE instrucciones
    (8) ciclo -> . WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones

    IDENTIFICADOR   shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8

    instruccion                    shift and go to state 9
    asignacion                     shift and go to state 3
    condicion                      shift and go to state 4
    ciclo                          shift and go to state 5

state 2

    (2) instrucciones -> instruccion .

    IDENTIFICADOR   reduce using rule 2 (instrucciones -> instruccion .)
    IF              reduce using rule 2 (instrucciones -> instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instruccion .)
    $end            reduce using rule 2 (instrucciones -> instruccion .)


state 3

    (3) instruccion -> asignacion .

    IDENTIFICADOR   reduce using rule 3 (instruccion -> asignacion .)
    IF              reduce using rule 3 (instruccion -> asignacion .)
    WHILE           reduce using rule 3 (instruccion -> asignacion .)
    $end            reduce using rule 3 (instruccion -> asignacion .)


state 4

    (4) instruccion -> condicion .

    IDENTIFICADOR   reduce using rule 4 (instruccion -> condicion .)
    IF              reduce using rule 4 (instruccion -> condicion .)
    WHILE           reduce using rule 4 (instruccion -> condicion .)
    $end            reduce using rule 4 (instruccion -> condicion .)


state 5

    (5) instruccion -> ciclo .

    IDENTIFICADOR   reduce using rule 5 (instruccion -> ciclo .)
    IF              reduce using rule 5 (instruccion -> ciclo .)
    WHILE           reduce using rule 5 (instruccion -> ciclo .)
    $end            reduce using rule 5 (instruccion -> ciclo .)


state 6

    (6) asignacion -> IDENTIFICADOR . ASIGNAR expresion PUNTO_Y_COMA

    ASIGNAR         shift and go to state 10


state 7

    (7) condicion -> IF . PAR_APERTURA expresion PAR_CIERRE instrucciones

    PAR_APERTURA    shift and go to state 11


state 8

    (8) ciclo -> WHILE . PAR_APERTURA expresion PAR_CIERRE instrucciones

    PAR_APERTURA    shift and go to state 12


state 9

    (1) instrucciones -> instrucciones instruccion .

    IDENTIFICADOR   reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 1 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 1 (instrucciones -> instrucciones instruccion .)


state 10

    (6) asignacion -> IDENTIFICADOR ASIGNAR . expresion PUNTO_Y_COMA
    (9) expresion -> . IDENTIFICADOR
    (10) expresion -> . NUMERO
    (11) expresion -> . expresion SUMA expresion
    (12) expresion -> . expresion RESTA expresion
    (13) expresion -> . expresion MULT expresion
    (14) expresion -> . expresion DIV expresion

    IDENTIFICADOR   shift and go to state 13
    NUMERO          shift and go to state 15

    expresion                      shift and go to state 14

state 11

    (7) condicion -> IF PAR_APERTURA . expresion PAR_CIERRE instrucciones
    (9) expresion -> . IDENTIFICADOR
    (10) expresion -> . NUMERO
    (11) expresion -> . expresion SUMA expresion
    (12) expresion -> . expresion RESTA expresion
    (13) expresion -> . expresion MULT expresion
    (14) expresion -> . expresion DIV expresion

    IDENTIFICADOR   shift and go to state 13
    NUMERO          shift and go to state 15

    expresion                      shift and go to state 16

state 12

    (8) ciclo -> WHILE PAR_APERTURA . expresion PAR_CIERRE instrucciones
    (9) expresion -> . IDENTIFICADOR
    (10) expresion -> . NUMERO
    (11) expresion -> . expresion SUMA expresion
    (12) expresion -> . expresion RESTA expresion
    (13) expresion -> . expresion MULT expresion
    (14) expresion -> . expresion DIV expresion

    IDENTIFICADOR   shift and go to state 13
    NUMERO          shift and go to state 15

    expresion                      shift and go to state 17

state 13

    (9) expresion -> IDENTIFICADOR .

    PUNTO_Y_COMA    reduce using rule 9 (expresion -> IDENTIFICADOR .)
    SUMA            reduce using rule 9 (expresion -> IDENTIFICADOR .)
    RESTA           reduce using rule 9 (expresion -> IDENTIFICADOR .)
    MULT            reduce using rule 9 (expresion -> IDENTIFICADOR .)
    DIV             reduce using rule 9 (expresion -> IDENTIFICADOR .)
    PAR_CIERRE      reduce using rule 9 (expresion -> IDENTIFICADOR .)


state 14

    (6) asignacion -> IDENTIFICADOR ASIGNAR expresion . PUNTO_Y_COMA
    (11) expresion -> expresion . SUMA expresion
    (12) expresion -> expresion . RESTA expresion
    (13) expresion -> expresion . MULT expresion
    (14) expresion -> expresion . DIV expresion

    PUNTO_Y_COMA    shift and go to state 18
    SUMA            shift and go to state 19
    RESTA           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22


state 15

    (10) expresion -> NUMERO .

    PUNTO_Y_COMA    reduce using rule 10 (expresion -> NUMERO .)
    SUMA            reduce using rule 10 (expresion -> NUMERO .)
    RESTA           reduce using rule 10 (expresion -> NUMERO .)
    MULT            reduce using rule 10 (expresion -> NUMERO .)
    DIV             reduce using rule 10 (expresion -> NUMERO .)
    PAR_CIERRE      reduce using rule 10 (expresion -> NUMERO .)


state 16

    (7) condicion -> IF PAR_APERTURA expresion . PAR_CIERRE instrucciones
    (11) expresion -> expresion . SUMA expresion
    (12) expresion -> expresion . RESTA expresion
    (13) expresion -> expresion . MULT expresion
    (14) expresion -> expresion . DIV expresion

    PAR_CIERRE      shift and go to state 23
    SUMA            shift and go to state 19
    RESTA           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22


state 17

    (8) ciclo -> WHILE PAR_APERTURA expresion . PAR_CIERRE instrucciones
    (11) expresion -> expresion . SUMA expresion
    (12) expresion -> expresion . RESTA expresion
    (13) expresion -> expresion . MULT expresion
    (14) expresion -> expresion . DIV expresion

    PAR_CIERRE      shift and go to state 24
    SUMA            shift and go to state 19
    RESTA           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22


state 18

    (6) asignacion -> IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA .

    IDENTIFICADOR   reduce using rule 6 (asignacion -> IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA .)
    IF              reduce using rule 6 (asignacion -> IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA .)
    WHILE           reduce using rule 6 (asignacion -> IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA .)
    $end            reduce using rule 6 (asignacion -> IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA .)


state 19

    (11) expresion -> expresion SUMA . expresion
    (9) expresion -> . IDENTIFICADOR
    (10) expresion -> . NUMERO
    (11) expresion -> . expresion SUMA expresion
    (12) expresion -> . expresion RESTA expresion
    (13) expresion -> . expresion MULT expresion
    (14) expresion -> . expresion DIV expresion

    IDENTIFICADOR   shift and go to state 13
    NUMERO          shift and go to state 15

    expresion                      shift and go to state 25

state 20

    (12) expresion -> expresion RESTA . expresion
    (9) expresion -> . IDENTIFICADOR
    (10) expresion -> . NUMERO
    (11) expresion -> . expresion SUMA expresion
    (12) expresion -> . expresion RESTA expresion
    (13) expresion -> . expresion MULT expresion
    (14) expresion -> . expresion DIV expresion

    IDENTIFICADOR   shift and go to state 13
    NUMERO          shift and go to state 15

    expresion                      shift and go to state 26

state 21

    (13) expresion -> expresion MULT . expresion
    (9) expresion -> . IDENTIFICADOR
    (10) expresion -> . NUMERO
    (11) expresion -> . expresion SUMA expresion
    (12) expresion -> . expresion RESTA expresion
    (13) expresion -> . expresion MULT expresion
    (14) expresion -> . expresion DIV expresion

    IDENTIFICADOR   shift and go to state 13
    NUMERO          shift and go to state 15

    expresion                      shift and go to state 27

state 22

    (14) expresion -> expresion DIV . expresion
    (9) expresion -> . IDENTIFICADOR
    (10) expresion -> . NUMERO
    (11) expresion -> . expresion SUMA expresion
    (12) expresion -> . expresion RESTA expresion
    (13) expresion -> . expresion MULT expresion
    (14) expresion -> . expresion DIV expresion

    IDENTIFICADOR   shift and go to state 13
    NUMERO          shift and go to state 15

    expresion                      shift and go to state 28

state 23

    (7) condicion -> IF PAR_APERTURA expresion PAR_CIERRE . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . condicion
    (5) instruccion -> . ciclo
    (6) asignacion -> . IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA
    (7) condicion -> . IF PAR_APERTURA expresion PAR_CIERRE instrucciones
    (8) ciclo -> . WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones

    IDENTIFICADOR   shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8

    instrucciones                  shift and go to state 29
    instruccion                    shift and go to state 2
    asignacion                     shift and go to state 3
    condicion                      shift and go to state 4
    ciclo                          shift and go to state 5

state 24

    (8) ciclo -> WHILE PAR_APERTURA expresion PAR_CIERRE . instrucciones
    (1) instrucciones -> . instrucciones instruccion
    (2) instrucciones -> . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . condicion
    (5) instruccion -> . ciclo
    (6) asignacion -> . IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA
    (7) condicion -> . IF PAR_APERTURA expresion PAR_CIERRE instrucciones
    (8) ciclo -> . WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones

    IDENTIFICADOR   shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8

    instrucciones                  shift and go to state 30
    instruccion                    shift and go to state 2
    asignacion                     shift and go to state 3
    condicion                      shift and go to state 4
    ciclo                          shift and go to state 5

state 25

    (11) expresion -> expresion SUMA expresion .
    (11) expresion -> expresion . SUMA expresion
    (12) expresion -> expresion . RESTA expresion
    (13) expresion -> expresion . MULT expresion
    (14) expresion -> expresion . DIV expresion

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PUNTO_Y_COMA    reduce using rule 11 (expresion -> expresion SUMA expresion .)
    PAR_CIERRE      reduce using rule 11 (expresion -> expresion SUMA expresion .)
    SUMA            shift and go to state 19
    RESTA           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22

  ! SUMA            [ reduce using rule 11 (expresion -> expresion SUMA expresion .) ]
  ! RESTA           [ reduce using rule 11 (expresion -> expresion SUMA expresion .) ]
  ! MULT            [ reduce using rule 11 (expresion -> expresion SUMA expresion .) ]
  ! DIV             [ reduce using rule 11 (expresion -> expresion SUMA expresion .) ]


state 26

    (12) expresion -> expresion RESTA expresion .
    (11) expresion -> expresion . SUMA expresion
    (12) expresion -> expresion . RESTA expresion
    (13) expresion -> expresion . MULT expresion
    (14) expresion -> expresion . DIV expresion

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PUNTO_Y_COMA    reduce using rule 12 (expresion -> expresion RESTA expresion .)
    PAR_CIERRE      reduce using rule 12 (expresion -> expresion RESTA expresion .)
    SUMA            shift and go to state 19
    RESTA           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22

  ! SUMA            [ reduce using rule 12 (expresion -> expresion RESTA expresion .) ]
  ! RESTA           [ reduce using rule 12 (expresion -> expresion RESTA expresion .) ]
  ! MULT            [ reduce using rule 12 (expresion -> expresion RESTA expresion .) ]
  ! DIV             [ reduce using rule 12 (expresion -> expresion RESTA expresion .) ]


state 27

    (13) expresion -> expresion MULT expresion .
    (11) expresion -> expresion . SUMA expresion
    (12) expresion -> expresion . RESTA expresion
    (13) expresion -> expresion . MULT expresion
    (14) expresion -> expresion . DIV expresion

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PUNTO_Y_COMA    reduce using rule 13 (expresion -> expresion MULT expresion .)
    PAR_CIERRE      reduce using rule 13 (expresion -> expresion MULT expresion .)
    SUMA            shift and go to state 19
    RESTA           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22

  ! SUMA            [ reduce using rule 13 (expresion -> expresion MULT expresion .) ]
  ! RESTA           [ reduce using rule 13 (expresion -> expresion MULT expresion .) ]
  ! MULT            [ reduce using rule 13 (expresion -> expresion MULT expresion .) ]
  ! DIV             [ reduce using rule 13 (expresion -> expresion MULT expresion .) ]


state 28

    (14) expresion -> expresion DIV expresion .
    (11) expresion -> expresion . SUMA expresion
    (12) expresion -> expresion . RESTA expresion
    (13) expresion -> expresion . MULT expresion
    (14) expresion -> expresion . DIV expresion

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PUNTO_Y_COMA    reduce using rule 14 (expresion -> expresion DIV expresion .)
    PAR_CIERRE      reduce using rule 14 (expresion -> expresion DIV expresion .)
    SUMA            shift and go to state 19
    RESTA           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22

  ! SUMA            [ reduce using rule 14 (expresion -> expresion DIV expresion .) ]
  ! RESTA           [ reduce using rule 14 (expresion -> expresion DIV expresion .) ]
  ! MULT            [ reduce using rule 14 (expresion -> expresion DIV expresion .) ]
  ! DIV             [ reduce using rule 14 (expresion -> expresion DIV expresion .) ]


state 29

    (7) condicion -> IF PAR_APERTURA expresion PAR_CIERRE instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . condicion
    (5) instruccion -> . ciclo
    (6) asignacion -> . IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA
    (7) condicion -> . IF PAR_APERTURA expresion PAR_CIERRE instrucciones
    (8) ciclo -> . WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    $end            reduce using rule 7 (condicion -> IF PAR_APERTURA expresion PAR_CIERRE instrucciones .)
    IDENTIFICADOR   shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8

  ! IDENTIFICADOR   [ reduce using rule 7 (condicion -> IF PAR_APERTURA expresion PAR_CIERRE instrucciones .) ]
  ! IF              [ reduce using rule 7 (condicion -> IF PAR_APERTURA expresion PAR_CIERRE instrucciones .) ]
  ! WHILE           [ reduce using rule 7 (condicion -> IF PAR_APERTURA expresion PAR_CIERRE instrucciones .) ]

    instruccion                    shift and go to state 9
    asignacion                     shift and go to state 3
    condicion                      shift and go to state 4
    ciclo                          shift and go to state 5

state 30

    (8) ciclo -> WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones .
    (1) instrucciones -> instrucciones . instruccion
    (3) instruccion -> . asignacion
    (4) instruccion -> . condicion
    (5) instruccion -> . ciclo
    (6) asignacion -> . IDENTIFICADOR ASIGNAR expresion PUNTO_Y_COMA
    (7) condicion -> . IF PAR_APERTURA expresion PAR_CIERRE instrucciones
    (8) ciclo -> . WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    $end            reduce using rule 8 (ciclo -> WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones .)
    IDENTIFICADOR   shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8

  ! IDENTIFICADOR   [ reduce using rule 8 (ciclo -> WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones .) ]
  ! IF              [ reduce using rule 8 (ciclo -> WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones .) ]
  ! WHILE           [ reduce using rule 8 (ciclo -> WHILE PAR_APERTURA expresion PAR_CIERRE instrucciones .) ]

    instruccion                    shift and go to state 9
    asignacion                     shift and go to state 3
    condicion                      shift and go to state 4
    ciclo                          shift and go to state 5
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 25 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 25 resolved as shift
WARNING: shift/reduce conflict for MULT in state 25 resolved as shift
WARNING: shift/reduce conflict for DIV in state 25 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 26 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 26 resolved as shift
WARNING: shift/reduce conflict for MULT in state 26 resolved as shift
WARNING: shift/reduce conflict for DIV in state 26 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 27 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 27 resolved as shift
WARNING: shift/reduce conflict for MULT in state 27 resolved as shift
WARNING: shift/reduce conflict for DIV in state 27 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 28 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 28 resolved as shift
WARNING: shift/reduce conflict for MULT in state 28 resolved as shift
WARNING: shift/reduce conflict for DIV in state 28 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 29 resolved as shift
WARNING: shift/reduce conflict for IF in state 29 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 29 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 30 resolved as shift
WARNING: shift/reduce conflict for IF in state 30 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 30 resolved as shift
